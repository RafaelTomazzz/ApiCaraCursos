// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_RAFAEL")
}

enum Departamentos{
  Diretoria
  RH
  Financeiro
  Contabilidade
  Juridico
  Comercial
  Marketing
  Logistica
  Compras
  TI
}

model Empresas {
  cnpj      String       @id
  nome      String    @db.VarChar(55)
  email     String    @db.VarChar(55)
  telefone  String    @db.VarChar(12)

  usuarios  Usuarios[]
}

model Usuarios{
  cpf             BigInt       @id
  cnpj_empresa    String       
  empresa         Empresas   @relation(fields: [cnpj_empresa], references: [cnpj], onDelete:Cascade)
  nome            String    @db.VarChar(20)
  sobrenome       String    @db.VarChar(20)
  senha           String    @db.VarChar(20)
  telefone        String?
  
  alunos    Alunos[]
  gestores  Gestores[] 
}

model Gestores{
  id              Int         @id @default(autoincrement())
  cpf_usuario     BigInt      @unique
  usuario         Usuarios     @relation(fields: [cpf_usuario], references: [cpf], onDelete:Cascade)
  departamento    Departamentos
}

model Alunos{
  id              Int         @id @default(autoincrement())
  cpf_usuario     BigInt      @unique
  usuario         Usuarios     @relation(fields: [cpf_usuario], references: [cpf], onDelete:Cascade)
  cargo           String      @db.VarChar(30)
  ultimo_acesso   DateTime    @default(now())

  alunos_cursos         Aluno_Cursos[]
  alunos_aulas          Aluno_Aulas[]
  alunos_avaliacaos     Aluno_Avaliacoes[]
  relatoios       Relatorios[]
  certificados    Certificados[]
}

model Aulas{
  id          Int        @id @default(autoincrement())
  titulo      String     @db.VarChar(30)
  video       String     @db.VarChar(255)
  imagem      String     @db.VarChar(255)
  duracao     Int
  material    String?     @db.VarChar(255)

  alunos_aulas    Aluno_Aulas[]
}

model Cursos{
  id                Int       @id @default(autoincrement())
  carga_horaria     Int
  descricao         String    @db.VarChar(255)
  
  avaliacoes        Avaliacoes[]
  alunos_cursos     Aluno_Cursos[]
  relatorios        Relatorios[]
  certificados      Certificados[]
}

model Avaliacoes{
  id              Int         @id @default(autoincrement())
  id_curso        Int
  curso           Cursos       @relation(fields: [id_curso], references: [id], onDelete:Cascade)
  titulo          String      @db.VarChar(255)
  duracao         String      @db.VarChar(255)
  data_limite     DateTime?
  tipo            String      @db.VarChar(255)
  nota_max        Int

  alunos_avaliacaos     Aluno_Avaliacoes[]
}

model Aluno_Avaliacoes{
  id_aluno        Int
  aluno           Alunos       @relation(fields: [id_aluno], references: [id], onDelete:Cascade)
  id_avaliacao    Int
  avaliacao       Avaliacoes   @relation(fields: [id_avaliacao], references: [id], onDelete:Cascade)
  nota            Int
  tempo_duracao   Int

  @@id([id_aluno, id_avaliacao])
}

model Aluno_Cursos{
  id_aluno          Int
  aluno             Alunos   @relation(fields: [id_aluno], references: [id], onDelete:Cascade)
  id_curso          Int
  curso             Cursos   @relation(fields: [id_curso], references: [id], onDelete:Cascade)
  data_inicio       DateTime
  data_fim          DateTime?

  @@id([id_aluno, id_curso])
  
}

model Aluno_Aulas{
  id_aluno      Int     
  aluno         Alunos       @relation(fields: [id_aluno], references: [id], onDelete: Cascade)
  id_aula       Int
  aula          Aulas        @relation(fields: [id_aula], references: [id], onDelete: Cascade)

  @@id([id_aluno, id_aula])
}

model Relatorios{
  id              Int       @id @default(autoincrement())
  id_aluno        Int
  aluno           Alunos     @relation(fields: [id_aluno], references: [id], onDelete:Cascade)
  id_curso        Int
  curso           Cursos     @relation(fields: [id_curso], references: [id], onDelete:Cascade)
  data_emissao    DateTime
  progresso       Int
}

model Certificados{
  id            Int       @id @default(autoincrement())
  id_aluno      Int
  aluno         Alunos     @relation(fields: [id_aluno], references: [id], onDelete:Cascade)
  id_curso      Int
  curso         Cursos     @relation(fields: [id_curso], references: [id], onDelete:Cascade)
  titulo        String    @db.VarChar(255)
}